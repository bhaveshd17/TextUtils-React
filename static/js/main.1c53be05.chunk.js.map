{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","wordCount","text","split","join","length","useState","setText","style","color","heading","backgroundColor","name","rows","value","placeholder","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","trim","document","getElementById","select","navigator","clipboard","writeText","Alert","alert","role","message","defaultProps","aboutTitle","App","setMode","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1c53be05.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutTitle}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          <ul className={`navbar-nav mb-2 mb-lg-0 d-flex text-${props.mode==='light'?'dark':'light'}`}>\r\n          <li className=\"nav-item\">\r\n              <div className=\"form-check form-switch\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"flexSwitchCheckDefault\"\r\n                  onClick={props.toggleMode}\r\n\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                  {props.mode==='light'?'Enable darkmode':'Enable lightmode'}\r\n                </label>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutTitle: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set Title\",\r\n  aboutTitle: \"About\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"On click\")\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to upperCase\", \"success\")\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert('Converted to lowerCase', 'success')\r\n    }\r\n    const handleStripClick = ()=>{\r\n        let newText = text.trim();\r\n        setText(newText)\r\n        props.showAlert('Whitespace removed', 'success')\r\n    }\r\n    const handleSpClick = ()=>{\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        props.showAlert('Extra space removed', 'success')\r\n    }\r\n    const handleCoClick = ()=>{\r\n        let text = document.getElementById('text-box');\r\n        text.select()\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert('Text copied', 'success')\r\n    }\r\n\r\n    const handleclearClick = ()=>{\r\n        setText('')\r\n    }\r\n\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"on Change\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const wordCount = (text)=>{\r\n        let newText = text.split(/[ ]+/)\r\n        return newText.join(\" \").split(' ').length\r\n    }\r\n    const [text, setText] = useState('')\r\n\r\n\r\n    return (\r\n        <>\r\n         <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white', }}>\r\n            <h4 className=\"text-center\">Text Summary</h4>\r\n            <div className=\"d-flex justify-content-center\">\r\n            <div className=\"w-25 mx-2\">\r\n            <div className=\"card card-body\" id=\"word-count\">\r\n                <h5 className=\"card-title text-center\">Word Count</h5>\r\n                <h6 className=\"card-text text-center\">{text?wordCount(text):0}</h6>\r\n\r\n            </div>\r\n            </div>\r\n           <div className=\"w-25 mx-2\">\r\n           <div className=\"card card-body\" id=\"character-count\">\r\n                <h5 className=\"card-title text-center\">Character Count</h5>\r\n                <h6 className=\"card-text text-center\">{text.length}</h6>\r\n            </div>\r\n           </div>\r\n           <div className=\"w-25 mx-2\">\r\n           <div className=\"card card-body\" id=\"reading-time\">\r\n                <h5 className=\"card-title text-center\">Reading Time</h5>\r\n                <h6 className=\"card-text text-center\">{text?0.008*wordCount(text):0} minutes</h6>\r\n            </div>\r\n           </div>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n        <div className=\"container my-5\" style={{color: props.mode==='light'?'black':'white', }}>\r\n            <h4>{props.heading}</h4>\r\n           <div className=\"mb-3\">\r\n           <textarea style={{color: props.mode==='light'?'black':'white',backgroundColor: props.mode==='light'?'white':'#212529', }} name=\"text-box\" id=\"text-box\" rows=\"10\" value={text} placeholder=\"Enter here...\" onChange={handleOnChange} className=\"form-control\"></textarea>\r\n           </div>\r\n            <div className=\"mb-3\">\r\n                <button className={`btn btn-${props.mode === 'light'?'primary':'success'} mx-2`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className={`btn btn-${props.mode === 'light'?'primary':'success'} mx-2`} onClick={handleLoClick}>Convert to Uppercase</button>\r\n                <button className={`btn btn-${props.mode === 'light'?'primary':'success'} mx-2`} onClick={handleStripClick}>Remove whiteSpaces</button>\r\n                <button className={`btn btn-${props.mode === 'light'?'primary':'success'} mx-2`} onClick={handleSpClick}>Remove extra spaces</button>\r\n                <button className={`btn btn-${props.mode === 'light'?'primary':'success'} mx-2`} onClick={handleCoClick}>Copy Text</button>\r\n                <button className={`btn btn-${props.mode === 'light'?'primary':'success'} mx-2`} onClick={handleclearClick}>Clear</button>\r\n            </div>\r\n        </div>\r\n       \r\n        <div className=\"container my-5\" style={{color: props.mode==='light'?'black':'white', }}>\r\n            <h4 className=\"text-center\">Preview</h4>\r\n            <p className=\"text-center\">{text.length>0?text:'Enter text to above box to preview here'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} fade show`} role=\"alert\">\r\n        <strong>{props.alert.message}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      message: message,\n      type: type,\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    }, 1500)\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#0f1012'\n      showAlert('Dark Mode enabled', 'success')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = '#efefef'\n      showAlert('Light Mode enabled', 'success')\n    }\n  }\n\n  return (\n    <>\n      \n      {/* <Router> */}\n      <Navbar title=\"TextUtil\" mode={mode} toggleMode={toggleMode} />\n      <div className=\"container\">\n        <Alert alert={alert}/>\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About mode={mode} showAlert={showAlert} /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm heading=\"Enter the text below to analyze\" mode={mode} showAlert={showAlert} />\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}